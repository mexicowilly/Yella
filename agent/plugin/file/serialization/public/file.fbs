include "plugin.fbs";

namespace yella.fb.file;

//
// Attribute types
//
enum attr_type : ushort
{
    FILE_TYPE = 1,          // ftype field in attr
    SHA256,                 // bytes field in attr
    POSIX_PERMISSIONS,      // psx_permissions field in attr
    USER,                   // usr_grp field in attr
    GROUP,                  // usr_grp field in attr
    SIZE,                   // unsigned_int field in attr
    ACCESS_TIME,            // millis_since_epoch field in attr
    METADATA_CHANGE_TIME,   // millis_since_epoch field in attr
    MODIFICATION_TIME       // millis_since_epoch field in attr
}

//
// Incoming requests
//

table monitor_request
{
    config: yella.fb.plugin.config;
    includes: [string];
    excludes: [string];
    attr_types: [ushort];
}

//
// Outgoing data
//

enum condition : byte
{
    ADDED = 1,
    CHANGED,
    REMOVED
}

enum file_type : byte
{
    BLOCK_SPECIAL = 1,
    CHARACTER_SPECIAL,
    DIRECTORY,
    FIFO,
    SYMBOLIC_LINK,
    REGULAR,
    SOCKET,
    WHITEOUT
}

table posix_permissions
{
    owner_read: bool = false;
    owner_write: bool = false;
    owner_execute: bool = false;
    group_read: bool = false;
    group_write: bool = false;
    group_execute: bool = false;
    other_read: bool = false;
    other_write: bool = false;
    other_execute: bool = false;
    set_uid: bool = false;
    set_gid: bool = false;
    sticky: bool = false;
}

table user_group
{
    id: uint64;
    name: string;
}

table file_state
{
    milliseconds_since_epoch: uint64;
    config_name: string;
    cond: condition = ADDED;
    file_name: string;
    attrs: [attr];
}

table file_states
{
    states: [file_state];
}

//
// Attribute definitions
//

table attr
{
    type: attr_type = FILE_TYPE;
    // One of the following will be set according to attr_type. See attr_type doc above for details.
    bytes: [ubyte];
    ftype: file_type = REGULAR;
    psx_permissions: posix_permissions;
    usr_grp: user_group;
    unsigned_int: uint64;
    millis_since_epoch: uint64;
}